#! /usr/bin/bash

checkName() {

    if [[ $1 != +([a-zA-Z]) ]]; then
        echo This name is not valid.
        checkName
    fi

}

#TODO: perform validation on dbName i.e.(don't start with integers - no spaces - etc)
createDB() {

    read -p "Enter the new Database name : " dbName
    if [ ! -d "./DBs/$dbName" ]; then
        mkdir -p "./DBs/$dbName"
        echo "A Brand new database is just made for you :)"
    else
        echo This database already exists, choose another name
        createDB
    fi
}

#TODO: Handle if the user already connected to a specific DB and wants to see all
listDBs() {
    
    if [ -d "./DBs" ] && [ `ls DBs | wc -l` -ne 0 ]; then		# Check if the Storage main folder exists and not empty
        echo "Available Databases : "
        ls DBs
    else
        echo "Not Existing or Empty Storage"
        listDBs
    fi
    
}

dropDB()
{
    
    read -p "Enter the Database name to drop : " db
    if [ -d "./DBs/$db" ]; then
        rm -r "./DBs/$db"
    else
        echo "Uknown Database name!"
        dropDB
    fi
    
}

connectDB() {
    
    read -p "Enter the Database name to connect to : " database
    if [ -d "./DBs/$database" ]; then
        #cd "./DBs/$database"			# should call another script and pass $database as an argument.
        source ./TableScripts/TableMenu.sh $database
        echo connected successfully to "$database" database.
    else
        echo This database doesn\'t exist, choose another name
        connectDB
    fi
}

renameDB() {
    
    read -p "Enter the Database name : " database
    if [ -d "./DBs/$database" ]; then
        read -p "Enter its new name : " newName
        mv "./DBs/$database" "./DBs/$newName"
        echo Renamed successfully
    else
        echo This database doesn\'t exist, choose another name
        renameDB
    fi
    
}
